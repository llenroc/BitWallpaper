<Application x:Class="BitWallpaper.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BitWallpaper"
             xmlns:vms="clr-namespace:BitWallpaper.ViewModels"
             xmlns:common="clr-namespace:BitWallpaper.Common"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf" 
             StartupUri="MainWindow.xaml"
             Startup="AppOnStartup">
    <Application.Resources>
        <ResourceDictionary>

            <!-- データコンテキスト -->
            <vms:MainViewModel x:Key="MainViewModel" />

            <!-- BooleanToVisibilityConverterの、 Collapsed 版　-->
            <common:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed" />

            <ResourceDictionary.MergedDictionaries>

                <!-- デフォルトテーマ 差し替え用 -->
                <ResourceDictionary Source="pack://application:,,,/Themes/DefaultTheme.xaml" x:Name="DefaultTheme"/>

                <ResourceDictionary>

                    <Style x:Key="DefaultTextBlockStyle" TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Normal" />
                    </Style>

                    <Style x:Key="LtpTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlockStyle}">
                        <Setter Property="FontSize" Value="18" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Margin" Value="12 0 0 3" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlLightColorBrush}" />
                    </Style>

                    <Style x:Key="DefaultLabelStyle" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource ControlMediumColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="Padding" Value="0" />
                    </Style>

                    <Style x:Key="DarkLabelStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource DefaultLabelStyle}">
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                    </Style>

                    <Style x:Key="SectionTitle" TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource TitleTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Margin" Value="3 0 0 0" />
                    </Style>

                    <Style x:Key="ErrorInfoTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultTextBlockStyle}">
                        <Setter Property="Foreground" Value="{StaticResource WarningColorBrush}" />
                    </Style>

                    <Style x:Key="DefaultRunStyle" TargetType="{x:Type Run}">
                        <Setter Property="Foreground" Value="{StaticResource NormalTextColorBrush}" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontStyle" Value="Normal" />
                    </Style>

                    <Style x:Key="HyperlinkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource ControlLightColorBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type Hyperlink}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource HyperlinkFocusVisual}"/>
                    </Style>

                    <DropShadowEffect
                        x:Key="DropShadowDepth"
                        BlurRadius="4"
                        Direction="315"
                        Opacity="0.8"
                        ShadowDepth="1.2"
                        Color="{DynamicResource BoardBackgroundColor}" />
                    <DropShadowEffect
                        x:Key="DropShadowDepthTabHeader"
                        BlurRadius="2"
                        Direction="300"
                        Opacity="1"
                        ShadowDepth="1.2"
                        Color="{DynamicResource BoardBackgroundColor}" />

                    <!-- ボード・タイルのスタイル -->
                    <Style x:Key="BoardStyle" TargetType="Border">
                        <Setter Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}"/>
                        <Setter Property="Effect" Value="{DynamicResource DropShadowDepth}"/>
                    </Style>

                    <!-- チャートのスタイル コードから指定 -->
                    <Style x:Key="ChartAxisStyle" TargetType="lvc:Axis">
                        <Setter Property="Foreground" Value="{DynamicResource ControlDarkColorBrush}" />
                    </Style>

                    <Style x:Key="ChartSectionStyle" TargetType="lvc:AxisSection">
                        <Setter Property="Stroke" Value="{DynamicResource ControlMediumColorBrush}" />
                    </Style>

                    <Style x:Key="ChartSeparatorStyle" TargetType="lvc:Separator">
                        <Setter Property="Stroke" Value="{DynamicResource ControlDarkColorBrush}" />
                    </Style>
                    
                    <Style x:Key="ChartVolumeStyle" TargetType="lvc:ColumnSeries">
                        <Setter Property="Fill" Value="{DynamicResource ChartVolumeColorBrush}" />
                    </Style>

                </ResourceDictionary>

                <!-- PathButton -->
                <ResourceDictionary>

                    <!-- FocusVisual -->
                    <Style x:Key="ButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="#CCCCCC" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="PathButton" TargetType="Button">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border"
                                        TextBlock.Foreground="{DynamicResource ControlForegroundColorBrush}"
                                        CornerRadius="0"
                                        BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                        <Path x:Name="PathIcon"
                                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                            Stretch="Uniform"
                                            Stroke="Transparent"
                                            StrokeThickness="0"
                                            Margin="4"
                                            RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                            <Path.Fill>
                                                <SolidColorBrush x:Name="PathIconColor" Color="{DynamicResource ControlForegroundColor}"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsDefault" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>

                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlMouseOverColorBrush}">
                                                <!--
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource ControlDarkColor}" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                                -->
                                            </Setter>
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsPressed" Value="true" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                            <Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource ControlPressedColorBrush}"/>

                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- Flat ComboBox -->
                <ResourceDictionary>

                    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Transparent" />
                    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent" />
                    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
                    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
                    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

                    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>
                            <Border Name="Border" Grid.ColumnSpan="2"  
                                    BorderBrush="Gray" 
                                    CornerRadius="0" 
                                    BorderThickness="0" 
                                    Background="{DynamicResource ComboBoxNormalBackgroundBrush}" />
                            <Border Name="ButtonBorder" Grid.Column="1" 
                                    CornerRadius="0" BorderThickness="0 0 0 0" BorderBrush="Transparent" Margin="1 1 1 0"
                                    Background="{DynamicResource ComboBoxNormalBackgroundBrush}" >
                                <Path Name="Arrow" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" Fill="{DynamicResource ControlForegroundColorBrush}" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource ComboBoxDisabledBackgroundBrush}"/>
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxDisabledBackgroundBrush}"/>
                                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxDisabledBorderBrush}"/>
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style x:Key="ComboBoxFlatFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="DarkGray"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>

                        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFlatFocusVisualStyle}"/>

                        <Setter Property="TextElement.Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundColorBrush}"/>

                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                                      ClickMode="Press" 
                                                      Focusable="False" 
                                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                                        <ContentPresenter Name="ContentSite" 
                                                          Margin="5, 3, 23, 3" 
                                                          IsHitTestVisible="False"
                                                          HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center" 
                                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                        <TextBox Name="PART_EditableTextBox" 
                                                 Margin="3, 3, 23, 3" 
                                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                                 Visibility="Hidden" 
                                                 Background="Transparent"
                                                 HorizontalAlignment="Center" 
                                                 VerticalAlignment="Center"
                                                 Focusable="True" >
                                            <TextBox.Template>
                                                <ControlTemplate TargetType="TextBox" >
                                                    <Border Name="PART_ContentHost" Focusable="False" />
                                                </ControlTemplate>
                                            </TextBox.Template>
                                        </TextBox>

                                        <TextBlock x:Name="SelectMessage" 
                                                   HorizontalAlignment="Center" 
                                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" 
                                                   VerticalAlignment="Center" 
                                                   Margin="{TemplateBinding Padding}" 
                                                   Visibility="Collapsed"
                                                   IsHitTestVisible="False"/>

                                        <!-- Popup showing items -->
                                        <Popup Name="Popup" 
                                               Placement="Bottom" 
                                               Focusable="False" 
                                               AllowsTransparency="True"
                                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                               PopupAnimation="Slide"
                                               Margin="0">
                                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                                <Border Name="DropDownBorder" Background="{DynamicResource BorderDarkColorBrush}" Margin="0, 0, 0, 0"
                                                        CornerRadius="0" BorderThickness="1" 
                                                        BorderBrush="{DynamicResource BorderDarkColorBrush}"/>
                                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ItemsControl.HasItems" Value="False">
                                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                        </Trigger>
                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                        </Trigger>
                                        <Trigger Property="ComboBox.IsEditable" Value="True">
                                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="SelectedItem" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="SelectMessage" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextElement.Foreground" TargetName="SelectMessage" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource ControlMouseOverColorBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- End of Flat ComboBox -->

                </ResourceDictionary>

                <!-- Silder -->
                <ResourceDictionary>
                    
                    <!-- FocusVisual -->
                    <Style x:Key="SilderFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2" StrokeThickness="1" Stroke="{DynamicResource ControlMediumColorBrush}" StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <Style x:Key="SliderRepeatButtonInc" TargetType="RepeatButton">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RepeatButton">
                                    <Border x:Name="Border" Background="DarkGray" BorderBrush="Transparent" Height="13" BorderThickness="0 5 0 5" SnapsToDevicePixels="True"/>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="Gray"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SliderRepeatButtonDec" TargetType="RepeatButton">
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter Property="Focusable" Value="false" />
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RepeatButton">
                                    <Border x:Name="Border" Background="LightGray" BorderBrush="Transparent" Height="13" BorderThickness="0 5 0 5" SnapsToDevicePixels="True"></Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="Gainsboro"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="CustomSliderThumb" TargetType="Thumb">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="False" />
                        <Setter Property="BorderBrush" Value="Gainsboro"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Thumb">
                                    <Rectangle x:Name="Rect" Height="12" Width="8">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Gainsboro" Offset="1" />
                                                <GradientStop Color="#ccc" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#323232" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0" Value="#eee" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Rectangle>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ControlTemplate x:Key="CustomSlider" TargetType="Slider">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Track Grid.Row="1" x:Name="PART_Track"   >
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonDec}"  Command="Slider.DecreaseLarge" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource CustomSliderThumb}"  />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonInc}" Command="Slider.IncreaseLarge" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>

                    <Style x:Key="CustomSliderStyle" TargetType="Slider">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource SilderFocusVisual}" />
                        <Style.Triggers>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Template" Value="{StaticResource CustomSlider}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>

                <!-- ScrollViewer-->
                <ResourceDictionary>

                    <!-- スクロールバーの幅 -->
                    <sys:Double x:Key="ScrollBarSize">16</sys:Double>
                    <!-- ボタンの長さ -->
                    <sys:Double x:Key="ScrollBarRepeatButtonSize">16</sys:Double>
                    <!-- スクロールバーのマージン -->
                    <sys:Double x:Key="ScrollBarMarginSize">0</sys:Double>

                    <Style x:Key="ScrollViewerFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{DynamicResource ControlMediumColorBrush}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- 終端の三角ボタンのスタイル -->
                    <Style x:Key="ScrollBarRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0"  Background="{DynamicResource ScrollBarColorBrush}" BorderBrush="{DynamicResource ScrollBarBorderBrush}" BorderThickness="1">
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ScrollBarHilightBrush}" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ScrollBarPressedBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource ScrollBarDisabledBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- トラック（レーン）のスタイル -->
                    <Style x:Key="ScrollBarTrackStyle" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border Background="Transparent"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- つまみのスタイル -->
                    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border CornerRadius="0" Background="{DynamicResource ScrollBarColorBrush}" BorderBrush="{DynamicResource ScrollBarBorderBrush}" BorderThickness="1" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- カスタムスクロールバーのスタイル -->
                    <Style x:Key="CustomScrollBarStyle" TargetType="{x:Type ScrollBar}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ScrollViewerFocusVisualStyle}"/>
                        <Setter Property="Focusable" Value="true"/>
                        <Style.Triggers>
                            <!-- 縦向きのスクロールバー -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Width" Value="{StaticResource ScrollBarSize}"/>
                                <Setter Property="Height" Value="Auto" />
                                <Setter Property="Margin">
                                    <Setter.Value>
                                        <Thickness Left="0" Top="{StaticResource ScrollBarMarginSize}" Right="{StaticResource ScrollBarMarginSize}" Bottom="{StaticResource ScrollBarMarginSize}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                    <RowDefinition/>
                                                    <RowDefinition MaxHeight="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="3" CornerRadius="0" Background="{DynamicResource ScrollBarTrackBrush}" />
                                                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarRepeatButtonStyle}" Height="{StaticResource ScrollBarRepeatButtonSize}" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                                                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}"  Command="ScrollBar.PageUpCommand" />
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"  Margin="0,1,0,1"/>
                                                    </Track.Thumb>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}" Command="ScrollBar.PageDownCommand" />
                                                    </Track.IncreaseRepeatButton>
                                                </Track>
                                                <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarRepeatButtonStyle}" Height="{StaticResource ScrollBarRepeatButtonSize}"  Command="ScrollBar.LineDownCommand"  Content="M 0 0 L 4 4 L 8 0 Z"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!-- 横向きのスクロールバー -->
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="Height" Value="{StaticResource ScrollBarSize}" />
                                <Setter Property="Margin">
                                    <Setter.Value>
                                        <Thickness Left="{StaticResource ScrollBarMarginSize}" Top="0" Right="{StaticResource ScrollBarMarginSize}" Bottom="{StaticResource ScrollBarMarginSize}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition MaxWidth="{StaticResource ScrollBarRepeatButtonSize}"/>
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.ColumnSpan="3" CornerRadius="0" Background="{StaticResource ScrollBarTrackBrush}" />
                                                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarRepeatButtonStyle}" Width="{StaticResource ScrollBarRepeatButtonSize}" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                                                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}"  Command="ScrollBar.PageLeftCommand" />
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumbStyle}"  Margin="1,0,1,0"/>
                                                    </Track.Thumb>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarTrackStyle}" Command="ScrollBar.PageRightCommand" />
                                                    </Track.IncreaseRepeatButton>
                                                </Track>
                                                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarRepeatButtonStyle}" Width="{StaticResource ScrollBarRepeatButtonSize}" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CustomScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                        <Setter Property="Focusable" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Style="{StaticResource CustomScrollBarStyle}" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource CustomScrollBarStyle}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ResourceDictionary>

                <!-- Settings TabControl -->
                <ResourceDictionary>

                    <Style x:Key="SettingsTabFocusVisualStyle">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="1" StrokeThickness="1" StrokeDashArray="1 2" Stroke="{DynamicResource ControlMediumColorBrush}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SettingsTabItemStyle" TargetType="{x:Type TabItem}">
                        <Setter Property="Foreground" Value="Gray" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{StaticResource SettingsTabFocusVisualStyle}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Border Name="Border" BorderThickness="0 0 0 1" BorderBrush="Transparent" Background="{DynamicResource TabUnselectedBackgroundColorBrush}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <!-- ぼかし背景を合わせる
                                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#111111" Opacity="0.8"></Rectangle>
 -->
                                            <Border Name="HeaderBorder" Grid.Row="0" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="0 0 0 0" BorderThickness="0 0 0 0" HorizontalAlignment="Center" CornerRadius="0">
                                                <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="False" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="HeaderBorder" Property="Background" Value="DarkGray" />
                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="DarkGray" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 1" />

                                            <Setter Property="Foreground" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                        </MultiTrigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                            </MultiTrigger.Conditions>

                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />

                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="Gray" />
                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 1" />

                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />
                                        </MultiTrigger>

                                        <Trigger Property="IsSelected" Value="True">

                                            <Setter Property="Margin" Value="0 0 0 0" />

                                            <Setter Property="Panel.ZIndex" Value="0" />

                                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource BoardBackgroundColorBrush}" />
                                            <Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource AccentWarmLightColorBrush}" />

                                            <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0 0 0 1" />

                                            <Setter Property="Foreground" Value="{DynamicResource NormalTextColorBrush}" />

                                        </Trigger>

                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="gray" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="#FFC9C7BA" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="SettingsTabControlStyle" TargetType="{x:Type TabControl}">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Focusable" Value="True"/>
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                    
                                        <TabPanel Grid.Row="0" Grid.Column="0" x:Name="HeaderPanel" HorizontalAlignment="Left" IsItemsHost="True" Margin="0 0 0 0"/>
                                        <Border Grid.Row="0" Grid.Column="1" x:Name="Border" BorderThickness="0 0 0 0" BorderBrush="DimGray" Margin="0" Background="{TemplateBinding Background}">
                                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" RecognizesAccessKey="True"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Application.Resources>
</Application>
